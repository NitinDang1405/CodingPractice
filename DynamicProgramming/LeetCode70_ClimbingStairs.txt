https://leetcode.com/problems/climbing-stairs/

Similar to fibonacci series problem 

Solution 1 :
class Solution {
public:
    int climbStairs(int n) {
        if(n==0 || n==1) return 1;
        
        if(n==2) return 2;
        
        int * fib= new int[n+1];
        fib[0]=1;
        fib[1]=1;
        for(int i=2; i<=n;i++){
            fib[i]= fib[i-1]+ fib[i-2];
        }
        
        return fib[n];
    }
};

Solution 2:
class Solution {
public:
    int climbStairs(int n) {
        if(n==0 || n==1) return 1;
        
        int * fib= new int[n+1];
        int prev1=1;
        int prev2=1;
        int count=0;
        for(int i=2; i<=n;i++){
            count= prev1+prev2;
            prev2=prev1;
            prev1=count;
        }
        
        return count;
    }
};